{"ast":null,"code":"// Initialisation\nimport { ADD, DELETE, DONE, EDIT } from \"../Constants/Constants\";\nconst Initialisation = {\n  TaskList: []\n}; // PURE FUNCTION\n\nconst TaskReducer = (state = Initialisation, action) => {\n  switch (action.type) {\n    case ADD:\n      return { ...state,\n        TaskList: [...state.TaskList, action.payload]\n      };\n\n    case DELETE:\n      return { ...state,\n        TaskList: state.TaskList.filter(el => el.id !== action.payload)\n      };\n\n    case DONE:\n      return { ...state,\n        TaskList: state.TaskList.map(el => el.id === action.payload ? { ...el,\n          isDone: !el.isDone\n        } : el)\n      };\n\n    case EDIT:\n      return { ...state,\n        TaskList: state.TaskList.map(el => el.id === action.payload.id ? { ...el,\n          description: action.payload.description\n        } : el)\n      };\n\n    default:\n      return state;\n  }\n};\n\n_c = TaskReducer;\nexport default TaskReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskReducer\");","map":{"version":3,"sources":["/home/bourezgui/Bureau/chekpoint_redux/src/Redux/Reducers/TaskReducer.js"],"names":["ADD","DELETE","DONE","EDIT","Initialisation","TaskList","TaskReducer","state","action","type","payload","filter","el","id","map","isDone","description"],"mappings":"AAAA;AAEA,SAAQA,GAAR,EAAaC,MAAb,EAAqBC,IAArB,EAA2BC,IAA3B,QAAsC,wBAAtC;AACA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,QAAQ,EAAE;AADW,CAAvB,C,CAIA;;AAEA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGH,cAAT,EAAyBI,MAAzB,KAAoC;AACtD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,GAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELF,QAAAA,QAAQ,EAAE,CAAC,GAAGE,KAAK,CAACF,QAAV,EAAoBG,MAAM,CAACE,OAA3B;AAFL,OAAP;;AAKF,SAAKT,MAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELF,QAAAA,QAAQ,EAAEE,KAAK,CAACF,QAAN,CAAeM,MAAf,CAAuBC,EAAD,IAAQA,EAAE,CAACC,EAAH,KAAUL,MAAM,CAACE,OAA/C;AAFL,OAAP;;AAKF,SAAKR,IAAL;AACE,aAAO,EACL,GAAGK,KADE;AAELF,QAAAA,QAAQ,EAAEE,KAAK,CAACF,QAAN,CAAeS,GAAf,CAAoBF,EAAD,IAC3BA,EAAE,CAACC,EAAH,KAAUL,MAAM,CAACE,OAAjB,GAA2B,EAAC,GAAGE,EAAJ;AAAQG,UAAAA,MAAM,EAAE,CAACH,EAAE,CAACG;AAApB,SAA3B,GAAyDH,EADjD;AAFL,OAAP;;AAOF,SAAKT,IAAL;AACE,aAAO,EACL,GAAGI,KADE;AAELF,QAAAA,QAAQ,EAAEE,KAAK,CAACF,QAAN,CAAeS,GAAf,CAAoBF,EAAD,IAC3BA,EAAE,CAACC,EAAH,KAAUL,MAAM,CAACE,OAAP,CAAeG,EAAzB,GACI,EAAC,GAAGD,EAAJ;AAAQI,UAAAA,WAAW,EAAER,MAAM,CAACE,OAAP,CAAeM;AAApC,SADJ,GAEIJ,EAHI;AAFL,OAAP;;AAQF;AACE,aAAOL,KAAP;AA/BJ;AAiCD,CAlCD;;KAAMD,W;AAoCN,eAAeA,WAAf","sourcesContent":["// Initialisation\n\nimport {ADD, DELETE, DONE, EDIT} from \"../Constants/Constants\";\nconst Initialisation = {\n  TaskList: [],\n};\n\n// PURE FUNCTION\n\nconst TaskReducer = (state = Initialisation, action) => {\n  switch (action.type) {\n    case ADD:\n      return {\n        ...state,\n        TaskList: [...state.TaskList, action.payload],\n      };\n\n    case DELETE:\n      return {\n        ...state,\n        TaskList: state.TaskList.filter((el) => el.id !== action.payload),\n      };\n\n    case DONE:\n      return {\n        ...state,\n        TaskList: state.TaskList.map((el) =>\n          el.id === action.payload ? {...el, isDone: !el.isDone} : el\n        ),\n      };\n\n    case EDIT:\n      return {\n        ...state,\n        TaskList: state.TaskList.map((el) =>\n          el.id === action.payload.id\n            ? {...el, description: action.payload.description}\n            : el\n        ),\n      };\n    default:\n      return state;\n  }\n};\n\nexport default TaskReducer;"]},"metadata":{},"sourceType":"module"}