{"ast":null,"code":"var _jsxFileName = \"/home/bourezgui/Bureau/chekpoint_redux/src/Component/Task/Task.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./Task.css\";\nimport { useDispatch } from \"react-redux\";\nimport { deleteTask, doneTask, editTask } from \"../../Redux/Actions/Task\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Task = ({\n  description,\n  id,\n  isDone\n}) => {\n  _s();\n\n  const dispatch = useDispatch(); // Hook to verif if edit button is clicked or not\n\n  const [open_edit, setopen_verif_edit] = useState(false); // Hook to store the input value\n\n  const [edit_desc, setedit_desc] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task\",\n    children: [!open_edit ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: isDone ? \"done desc\" : \"undone desc\",\n      value: description,\n      readOnly: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this) :\n    /*#__PURE__*/\n    // if user choose to edit task\n    _jsxDEV(\"input\", {\n      className: \"desc\",\n      defaultValue: description,\n      type: \"text\",\n      onChange: e => {\n        setedit_desc(e.target.value);\n      },\n      autoFocus: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        if (!open_edit) {\n          setopen_verif_edit(!open_edit);\n          setedit_desc(description);\n        } else {\n          if (!edit_desc) {\n            alert(\"Warning !! Empty modification\");\n            setopen_verif_edit(!open_edit);\n          } else {\n            dispatch(editTask({\n              id,\n              description: edit_desc\n            }));\n            setedit_desc(\"\");\n            setopen_verif_edit(!open_edit);\n          }\n        }\n      },\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch(deleteTask(id)),\n      children: \"DELETE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch(doneTask(id)),\n      children: isDone ? \"Done\" : \"Undone\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Task, \"W/Yc3BO8oXAMyYVeAVa8xf4AXMQ=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Task;\nexport default Task;\n\nvar _c;\n\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"sources":["/home/bourezgui/Bureau/chekpoint_redux/src/Component/Task/Task.js"],"names":["React","useState","useDispatch","deleteTask","doneTask","editTask","Task","description","id","isDone","dispatch","open_edit","setopen_verif_edit","edit_desc","setedit_desc","e","target","value","alert"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,YAAP;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAAQC,UAAR,EAAoBC,QAApB,EAA8BC,QAA9B,QAA6C,0BAA7C;;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA,WAAD;AAAcC,EAAAA,EAAd;AAAkBC,EAAAA;AAAlB,CAAD,KAA+B;AAAA;;AAC1C,QAAMC,QAAQ,GAAGR,WAAW,EAA5B,CAD0C,CAE1C;;AACA,QAAM,CAACS,SAAD,EAAYC,kBAAZ,IAAkCX,QAAQ,CAAC,KAAD,CAAhD,CAH0C,CAI1C;;AACA,QAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,EAAD,CAA1C;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,eACG,CAACU,SAAD,gBACC;AACE,MAAA,SAAS,EAAEF,MAAM,GAAG,WAAH,GAAiB,aADpC;AAEE,MAAA,KAAK,EAAEF,WAFT;AAGE,MAAA,QAAQ,EAAE;AAHZ;AAAA;AAAA;AAAA;AAAA,YADD;AAAA;AAOC;AACA;AACE,MAAA,SAAS,EAAC,MADZ;AAEE,MAAA,YAAY,EAAEA,WAFhB;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,QAAQ,EAAGQ,CAAD,IAAO;AACfD,QAAAA,YAAY,CAACC,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ;AACD,OANH;AAOE,MAAA,SAAS;AAPX;AAAA;AAAA;AAAA;AAAA,YATJ,eAmBE;AACE,MAAA,OAAO,EAAE,MAAM;AACb,YAAI,CAACN,SAAL,EAAgB;AACdC,UAAAA,kBAAkB,CAAC,CAACD,SAAF,CAAlB;AAEAG,UAAAA,YAAY,CAACP,WAAD,CAAZ;AACD,SAJD,MAIO;AACL,cAAI,CAACM,SAAL,EAAgB;AACdK,YAAAA,KAAK,CAAC,+BAAD,CAAL;AACAN,YAAAA,kBAAkB,CAAC,CAACD,SAAF,CAAlB;AACD,WAHD,MAGO;AACLD,YAAAA,QAAQ,CAACL,QAAQ,CAAC;AAACG,cAAAA,EAAD;AAAKD,cAAAA,WAAW,EAAEM;AAAlB,aAAD,CAAT,CAAR;AACAC,YAAAA,YAAY,CAAC,EAAD,CAAZ;AACAF,YAAAA,kBAAkB,CAAC,CAACD,SAAF,CAAlB;AACD;AACF;AACF,OAhBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAnBF,eAuCE;AAAQ,MAAA,OAAO,EAAE,MAAMD,QAAQ,CAACP,UAAU,CAACK,EAAD,CAAX,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAvCF,eAwCE;AAAQ,MAAA,OAAO,EAAE,MAAME,QAAQ,CAACN,QAAQ,CAACI,EAAD,CAAT,CAA/B;AAAA,gBACGC,MAAM,GAAG,MAAH,GAAY;AADrB;AAAA;AAAA;AAAA;AAAA,YAxCF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8CD,CArDD;;GAAMH,I;UACaJ,W;;;KADbI,I;AAuDN,eAAeA,IAAf","sourcesContent":["import React, {useState} from \"react\";\nimport \"./Task.css\";\nimport {useDispatch} from \"react-redux\";\nimport {deleteTask, doneTask, editTask} from \"../../Redux/Actions/Task\";\n\nconst Task = ({description, id, isDone}) => {\n  const dispatch = useDispatch();\n  // Hook to verif if edit button is clicked or not\n  const [open_edit, setopen_verif_edit] = useState(false);\n  // Hook to store the input value\n  const [edit_desc, setedit_desc] = useState(\"\");\n\n  return (\n    <div className=\"task\">\n      {!open_edit ? (\n        <textarea\n          className={isDone ? \"done desc\" : \"undone desc\"}\n          value={description}\n          readOnly={true}\n        ></textarea>\n      ) : (\n        // if user choose to edit task\n        <input\n          className=\"desc\"\n          defaultValue={description}\n          type=\"text\"\n          onChange={(e) => {\n            setedit_desc(e.target.value);\n          }}\n          autoFocus\n        />\n      )}\n      <button\n        onClick={() => {\n          if (!open_edit) {\n            setopen_verif_edit(!open_edit);\n\n            setedit_desc(description);\n          } else {\n            if (!edit_desc) {\n              alert(\"Warning !! Empty modification\");\n              setopen_verif_edit(!open_edit);\n            } else {\n              dispatch(editTask({id, description: edit_desc}));\n              setedit_desc(\"\");\n              setopen_verif_edit(!open_edit);\n            }\n          }\n        }}\n      >\n        Edit\n      </button>\n      <button onClick={() => dispatch(deleteTask(id))}>DELETE</button>\n      <button onClick={() => dispatch(doneTask(id))}>\n        {isDone ? \"Done\" : \"Undone\"}\n      </button>\n    </div>\n  );\n};\n\nexport default Task;"]},"metadata":{},"sourceType":"module"}